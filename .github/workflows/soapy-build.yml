name: SoapySDR module build tests

on:
  pull_request:
    paths:
      - "software/soapy/**"
    branches: [ "v2" ]
  push:
    paths:
      - "software/soapy/**"
    branches: [ "v2" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - arch: amd64
          - arch: arm64

    steps:
    - name: Update install
      run:
        sudo apt-get update
      timeout-minutes: 5

    - name: Install build dependencies
      run: |
        if [[ "${{matrix.arch}}" == "amd64" ]]; then
          # Native
          sudo apt-get install build-essential
        elif [[ "${{matrix.arch}}" == "arm64" ]]; then
          # 64-bit ARM
          sudo apt-get install crossbuild-essential-arm64
        fi

        sudo apt-get install cmake
      timeout-minutes: 5

    - name: Install SoapySDR
      run: |
        if [[ "${{matrix.arch}}" == "amd64" ]]; then
          # Native
          sudo apt-get install libsoapysdr-dev
        elif [[ "${{matrix.arch}}" == "arm64" ]]; then
          # 64-bit ARM
          # Cross-build SoapySDR from source
          CROSS_COMPILE=aarch64-linux-gnu-
          git clone --depth=1 https://github.com/pothosware/SoapySDR
          cd SoapySDR
          mkdir build
          cd build
          cmake \
            -D CMAKE_C_COMPILER=$(CROSS_COMPILE)gcc \
            -D CMAKE_CXX_COMPILER=$(CROSS_COMPILE)g++ \
            -D CMAKE_AR=$(CROSS_COMPILE)ar \
            -D CMAKE_C_COMPILER_AR=$(CROSS_COMPILE)gcc-ar \
            -D CMAKE_C_COMPILER_RANLIB=$(CROSS_COMPILE)gcc-ranlib \
            -D CMAKE_LINKER=$(CROSS_COMPILE)ld \
            -D CMAKE_NM=$(CROSS_COMPILE)nm \
            -D CMAKE_OBJCOPY=$(CROSS_COMPILE)objcopy \
            -D CMAKE_OBJDUMP=$(CROSS_COMPILE)objdump \
            -D CMAKE_RANLIB=$(CROSS_COMPILE)ranlib \
            -D CMAKE_STRIP=$(CROSS_COMPILE)strip \
            ..
          make -j$(nproc)
          sudo make install
          sudo ldconfig
        fi
      timeout-minutes: 5

    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        clean: true

    - name: Build SoapySDR module (${{matrix.arch}})
      run: |
        cd ${{github.workspace}}/software/soapy
        mkdir build
        cd build
        
        if [[ "${{matrix.arch}}" == "amd64" ]]; then
          # Native
          cmake ../
        elif [[ "${{matrix.arch}}" == "arm64" ]]; then
          # 64-bit ARM
          cmake \
            -D CMAKE_C_COMPILER=$(CROSS_COMPILE)gcc \
            -D CMAKE_CXX_COMPILER=$(CROSS_COMPILE)g++ \
            -D CMAKE_AR=$(CROSS_COMPILE)ar \
            -D CMAKE_C_COMPILER_AR=$(CROSS_COMPILE)gcc-ar \
            -D CMAKE_C_COMPILER_RANLIB=$(CROSS_COMPILE)gcc-ranlib \
            -D CMAKE_LINKER=$(CROSS_COMPILE)ld \
            -D CMAKE_NM=$(CROSS_COMPILE)nm \
            -D CMAKE_OBJCOPY=$(CROSS_COMPILE)objcopy \
            -D CMAKE_OBJDUMP=$(CROSS_COMPILE)objdump \
            -D CMAKE_RANLIB=$(CROSS_COMPILE)ranlib \
            -D CMAKE_STRIP=$(CROSS_COMPILE)strip \
            ..
        fi

        make -j$(nproc)

    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: soapy_module_${{matrix.arch}}
        path: ${{github.workspace}}/software/soapy/build/libIcyRadioSupport.so
        retention-days: 30
